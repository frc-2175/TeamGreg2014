// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2175.Robot2014.subsystems;

import org.usfirst.frc2175.Robot2014.RobotMap;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 * This class controls the intake arm.
 */
public class Arm extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DoubleSolenoid armSolenoid = RobotMap.armArmSolenoid;
    SpeedController rollerBar = RobotMap.armRollerBar;
    DigitalInput armOutSwitch1 = RobotMap.armArmOutSwitch1;
    DigitalInput armOutSwitch2 = RobotMap.armArmOutSwitch2;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    
    /**
     * Moves the intake arm to a set position.
     * @param out Whether the arm should be out or not.
     */
    public void MoveArmToPosition(boolean out) {
	if (out) {
            armSolenoid.set(DoubleSolenoid.Value.kForward);
	} else {
            armSolenoid.set(DoubleSolenoid.Value.kReverse);
	}
    }
    
    /**
     * Runs the roller bar at a given speed.
     * @param speed The speed, from -1 to 1, of the roller bar. Positive values
     * suck a ball in, negative values spit a ball out.
     */
    public void RunRollerBarAtSpeed(double speed) {
        rollerBar.set(speed);
    }
    
    /**
     * Gets the value of the right arm mag switch.
     * @return The value of the right arm mag switch.
     */
    public boolean IsArmSwitch1() {
        return !armOutSwitch1.get();
    }
    
    /**
     * Gets the value of the left arm mag switch.
     * @return The value of the left arm mag switch.
     */
    public boolean IsArmSwitch2() {
        return !armOutSwitch2.get();
    }
    
    /**
     * Checks the mag switches to see whether the arm is fully out.
     * @return Whether or not the intake arm is fully out.
     */
    public boolean IsArmOut() {
        return IsArmSwitch1() || IsArmSwitch2();
    }
}

